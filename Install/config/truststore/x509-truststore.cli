embed-server --server-config=standalone-ha.xml --std-out=discard

# - ajouter dans elytron:<tls>:<key-stores>
# <key-store name="kcTrustStore">
#    <credential-reference clear-text="$keycloak_tls_truststore_password"/>
#    <implementation type="JKS"/>
#    <file path="$keycloak_tls_truststore_file"/>
# </key-store>
/subsystem=elytron/key-store=kcTrustStore:add(path=$keycloak_tls_truststore_file,type=JKS,credential-reference={clear-text=$keycloak_tls_truststore_password})



# - ajouter dans :elytron:<tls>"
# <trust-managers>
#    <trust-manager name="kcTrustManager" key-store="kcTrustStore"/>
# </trust-managers>

# - ajouter dans :elytron:<tls>:
# <server-ssl-contexts>
#    <server-ssl-context name="kcSSLContext" want-client-auth="true" key-manager="kcKeyManager" trust-manager="kcTrustManager"/>
#  </server-ssl-contexts>
/subsystem=elytron/trust-manager=kcTrustManager:add(key-store=kcTrustStore)
if (outcome != success) of /subsystem=elytron/server-ssl-context=kcSSLContext:read-resource
else
    /subsystem=elytron/server-ssl-context=kcSSLContext:write-attribute(name=trust-manager, value=kcTrustManager)
    /subsystem=elytron/server-ssl-context=kcSSLContext:write-attribute(name=want-client-auth, value=true)
end-if

# - ajouter a keycloak-server
# <spi name="truststore">
#  <provider name="file" enabled="true">
#    <properties>
#      <property name="file" value="$keycloak_tls_truststore_file"/>
#      <property name="password" value="$keycloak_tls_truststore_password"/>
#      <property name="hostname-verification-policy" value="WILDCARD"/>
#      <property name="disabled" value="false"/>
#     </properties>
#  </provider>
# </spi>
if (outcome != success) of /subsystem=keycloak-server/spi=truststore:read-resource
    /subsystem=keycloak-server/spi=truststore/:add
end-if
/subsystem=keycloak-server/spi=truststore/provider=file/:add(enabled=true,properties={ \
    file => $keycloak_tls_truststore_file, \
    password => $keycloak_tls_truststore_password, \
    hostname-verification-policy => "WILDCARD", \
disabled => "false"})

stop-embedded-server
